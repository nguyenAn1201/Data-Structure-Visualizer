[{"/Users/annguyen/workspace/data-structure-visualizer/src/App.tsx":"1","/Users/annguyen/workspace/data-structure-visualizer/src/reportWebVitals.ts":"2","/Users/annguyen/workspace/data-structure-visualizer/src/index.tsx":"3","/Users/annguyen/workspace/data-structure-visualizer/src/LinkedList/LinkedList.ts":"4","/Users/annguyen/workspace/data-structure-visualizer/src/Components/LinkedListComponent.tsx":"5","/Users/annguyen/workspace/data-structure-visualizer/src/LinkedList/LinkedListNode.ts":"6","/Users/annguyen/workspace/data-structure-visualizer/src/Components/LinkedListNodeComponent.tsx":"7"},{"size":1262,"mtime":1610056904261,"results":"8","hashOfConfig":"9"},{"size":425,"mtime":1607203879362,"results":"10","hashOfConfig":"9"},{"size":500,"mtime":1607203879361,"results":"11","hashOfConfig":"9"},{"size":2515,"mtime":1610057515589,"results":"12","hashOfConfig":"9"},{"size":2843,"mtime":1610058955255,"results":"13","hashOfConfig":"9"},{"size":513,"mtime":1609859553640,"results":"14","hashOfConfig":"9"},{"size":1145,"mtime":1610040885077,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"11jusgh",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},"/Users/annguyen/workspace/data-structure-visualizer/src/App.tsx",["31","32"],"/Users/annguyen/workspace/data-structure-visualizer/src/reportWebVitals.ts",[],"/Users/annguyen/workspace/data-structure-visualizer/src/index.tsx",[],"/Users/annguyen/workspace/data-structure-visualizer/src/LinkedList/LinkedList.ts",[],"/Users/annguyen/workspace/data-structure-visualizer/src/Components/LinkedListComponent.tsx",["33"],"/Users/annguyen/workspace/data-structure-visualizer/src/LinkedList/LinkedListNode.ts",[],"/Users/annguyen/workspace/data-structure-visualizer/src/Components/LinkedListNodeComponent.tsx",["34"],"import { Box, Card, CardContent, Divider, makeStyles, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { createStyles, Theme, useTheme } from '@material-ui/core/styles';\n\ninterface LinkedListNodeProps {\n    value: number,\n}\n\nexport const LinkedListNodeComponent: React.FC<LinkedListNodeProps> = ({value}) => {\n    const classes = useStyles();\n\n    return (\n        <Box m={2}>\n            <Card square className={classes.root}>\n                <CardContent className={classes.cardContent}>\n                    <Typography variant=\"button\">Data: {value}</Typography>\n                </CardContent>\n                <Divider/>\n                <CardContent className={classes.cardContent}>\n                    <Typography variant=\"button\">Next Node</Typography>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            maxWidth: \"160px\",\n            backgroundColor: theme.palette.primary.light,\n        },\n        cardContent: {\n            dispaly: \"flex\",\n            textAlign: \"center\",\n\n        }\n    })\n)\n",{"ruleId":"35","severity":1,"message":"36","line":1,"column":18,"nodeType":"37","messageId":"38","endLine":1,"endColumn":28},{"ruleId":"35","severity":1,"message":"39","line":3,"column":17,"nodeType":"37","messageId":"38","endLine":3,"endColumn":25},{"ruleId":"40","severity":1,"message":"41","line":61,"column":38,"nodeType":"42","messageId":"43","endLine":61,"endColumn":40},{"ruleId":"35","severity":1,"message":"44","line":3,"column":31,"nodeType":"37","messageId":"38","endLine":3,"endColumn":39},"@typescript-eslint/no-unused-vars","'IconButton' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useTheme' is defined but never used."]