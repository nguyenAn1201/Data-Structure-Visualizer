[{"/Users/annguyen/workspace/data-structure-visualizer/src/index.tsx":"1","/Users/annguyen/workspace/data-structure-visualizer/src/LinkedList/LinkedListNode.ts":"2","/Users/annguyen/workspace/data-structure-visualizer/src/Components/LinkedListComponent.tsx":"3","/Users/annguyen/workspace/data-structure-visualizer/src/LinkedList/LinkedList.ts":"4","/Users/annguyen/workspace/data-structure-visualizer/src/Components/LinkedListNodeComponent.tsx":"5","/Users/annguyen/workspace/data-structure-visualizer/src/App.tsx":"6","/Users/annguyen/workspace/data-structure-visualizer/src/reportWebVitals.ts":"7"},{"size":500,"mtime":1607203879361,"results":"8","hashOfConfig":"9"},{"size":513,"mtime":1609859553640,"results":"10","hashOfConfig":"9"},{"size":3418,"mtime":1610401695365,"results":"11","hashOfConfig":"9"},{"size":2812,"mtime":1610401628392,"results":"12","hashOfConfig":"9"},{"size":1145,"mtime":1610040885077,"results":"13","hashOfConfig":"9"},{"size":1262,"mtime":1610056904261,"results":"14","hashOfConfig":"9"},{"size":425,"mtime":1607203879362,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1feha9o",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/annguyen/workspace/data-structure-visualizer/src/index.tsx",[],"/Users/annguyen/workspace/data-structure-visualizer/src/LinkedList/LinkedListNode.ts",[],"/Users/annguyen/workspace/data-structure-visualizer/src/Components/LinkedListComponent.tsx",[],"/Users/annguyen/workspace/data-structure-visualizer/src/LinkedList/LinkedList.ts",[],"/Users/annguyen/workspace/data-structure-visualizer/src/Components/LinkedListNodeComponent.tsx",["32"],"import { Box, Card, CardContent, Divider, makeStyles, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { createStyles, Theme, useTheme } from '@material-ui/core/styles';\n\ninterface LinkedListNodeProps {\n    value: number,\n}\n\nexport const LinkedListNodeComponent: React.FC<LinkedListNodeProps> = ({value}) => {\n    const classes = useStyles();\n\n    return (\n        <Box m={2}>\n            <Card square className={classes.root}>\n                <CardContent className={classes.cardContent}>\n                    <Typography variant=\"button\">Data: {value}</Typography>\n                </CardContent>\n                <Divider/>\n                <CardContent className={classes.cardContent}>\n                    <Typography variant=\"button\">Next Node</Typography>\n                </CardContent>\n            </Card>\n        </Box>\n    )\n}\n\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n        root: {\n            maxWidth: \"160px\",\n            backgroundColor: theme.palette.primary.light,\n        },\n        cardContent: {\n            dispaly: \"flex\",\n            textAlign: \"center\",\n\n        }\n    })\n)\n","/Users/annguyen/workspace/data-structure-visualizer/src/App.tsx",["33","34"],"import { AppBar, IconButton, Toolbar, Typography } from '@material-ui/core';\nimport { createMuiTheme, createStyles, makeStyles, Theme, ThemeProvider } from '@material-ui/core/styles';\nimport React, { useState } from 'react';\nimport { LinkedListComponent } from './Components/LinkedListComponent';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: '#757ce8',\n      main: '#3f50b5',\n      dark: '#002884',\n      contrastText: '#fff',\n    },\n    secondary: {\n      light: '#ff7961',\n      main: '#f44336',\n      dark: '#ba000d',\n      contrastText: '#000',\n    },\n  },\n});\n\n\nexport const App = () => {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"App\">\n      <AppBar position='static'>\n        <Toolbar>\n        <Typography variant=\"h6\" className={classes.title}>\n          Data Structure Visualizer\n        </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <LinkedListComponent />\n    </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    menuButton: {\n      marginRight: theme.spacing(2),\n    },\n    title: {\n      textAlign: \"center\",\n      flexGrow: 1,\n    },\n  }),\n);\n","/Users/annguyen/workspace/data-structure-visualizer/src/reportWebVitals.ts",[],{"ruleId":"35","severity":1,"message":"36","line":3,"column":31,"nodeType":"37","messageId":"38","endLine":3,"endColumn":39},{"ruleId":"35","severity":1,"message":"39","line":1,"column":18,"nodeType":"37","messageId":"38","endLine":1,"endColumn":28},{"ruleId":"35","severity":1,"message":"40","line":3,"column":17,"nodeType":"37","messageId":"38","endLine":3,"endColumn":25},"@typescript-eslint/no-unused-vars","'useTheme' is defined but never used.","Identifier","unusedVar","'IconButton' is defined but never used.","'useState' is defined but never used."]